<?php
// $Id$

/**
 * @file
 * Converts http://www.pcso.gov.ph/lotto-search.aspx
 * into a drupal Page
 *  @author Dino Simeon M. Madarang <dmadarang@gmail.com>
 */

/**
* Display help and module information
* @param section which section of the site we're displaying help
* @return help text for section
*/
function lotto_help($section='') {

  $output = '';

  switch ($section) {
    case "admin/help#lotto":
      $output = '<p>' . t("Converts PCSO Lotto result page (HTML Table) to a drupal page") . '</p>';
      break;
  }

  return $output;
} // end lotto_help

function lotto_block_info() {
  $blocks['lotto_block'] = array(
    'info' => t('PCSO Lotto Results'),
  );

  return $blocks;
}


/**
* Generate HTML for the PCSO Lotto block
* @param op the operation from the URL
* @param delta offset
* @returns block HTML
*/
function lotto_block_view($delta=0) {
  $block['subject'] = 'PCSO Lotto Results ' . lotto_get_latest_date();
  $out = lotto_get_combination_items();
  $block['content'] = theme('lotto_block_featured_results', array('items' => $out));

  return $block;
} 

function lotto_get_latest_date() {

  $result = db_query("SELECT max(drawdate) as latestdrawdate
                      FROM {lotto}");
  $latestdate = false;
  foreach ($result as $record) {
    $latestdate = $record->latestdrawdate;
  }

  return $latestdate;
}

function lotto_get_combination_items() {
  $latestdate = lotto_get_latest_date();
  
  $sql = "SELECT lottogame, combination
          FROM {lotto}
          WHERE drawdate = :drawdate
          ORDER BY drawdate DESC LIMIT 5";
  $result = db_query($sql, array(':drawdate' =>$latestdate));
  $items = FALSE;
  foreach ($result as $item) {
    $items[] = array($item->lottogame, $item->combination); 
  }
  return $items;
  
}

/**
 * Implementation of hook_cron().
 *
 * Update bulletin once their refresh interval has elapsed.
 */
function lotto_cron() {
  $refresh = variable_get('lotto_refresh', 7200);
  $checked = variable_get('lotto_checked', 0);

  if (($refresh + $checked) < time()) {
    lotto_refresh();
  }

}

/**
 * Checks a news feed for new items.
 */
function lotto_refresh() {

  include_once 'table-extractor.php';
  //replaced http://oldweb.pcso.gov.ph/lotto-search.aspx with (1/31/2015):
  
  //old -http://www.pcso.gov.ph/lotto-search.aspx
  $feed['url'] = variable_get('lotto_source_url', 'http://www.pcso.gov.ph/lotto-search/lotto-search.aspx');

	watchdog('lotto', 'accessing :' . $feed['url']); 

  // Generate conditional GET headers.
  $headers = array();
  if (isset($feed['etag'])) {
    $headers['If-None-Match'] = $feed['etag'];
  }
  if (isset($feed['modified'])) {
    $headers['If-Modified-Since'] = gmdate('D, d M Y H:i:s', $feed['modified']) .' GMT';
  }

  $headers['method'] = 'GET';
  $headers['User-Agent'] = "User-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)\r\n\r\n";
  // Request feed.
  $result = drupal_http_request($feed['url'], $headers);

  // Process HTTP response code.
  switch ($result->code) {
    case 301:
      $feed['url'] = $result->redirect_url;
      watchdog('lotto', t('Updated URL to %url.', array('%url' => $feed['url'])));
    case 200:
    case 302:
    case 304:
    case 307:
      // Filter the input data:
      if ($result->data) {
        if (isset($result->headers['Last-Modified'])) {
          $modified = strtotime($result->headers['Last-Modified']);
        }

        $page = & $result->data;

        $pos = stripos($page, "Search results");
        $tablehtml = substr($page, $pos + 24);
//		      $endpos    = stripos($tablehtml, "<!-- End of About Content -->");

        $endpos    = stripos($tablehtml, "</body>");
	      $table     = substr($tablehtml, 0, $endpos - 7);

	      $tx = new tableExtractor;
        $tx->stripTags = TRUE;
        $tx->source    = $table;
        $tableArray    = '';  
        $tableArray    = @$tx->extractTable();

        if ($tableArray && lotto_is_valid_content($tableArray) == TRUE) {

          // To do: delete result with the same date(s) in $tableArray
          db_query("DELETE FROM {lotto}");
          
          foreach ($tableArray as $rec) {
            $data = array('lottogame' => trim($rec["LOTTO GAME"]),
                          'drawdate' => trim($rec["DRAW DATE"]),
                          'combination' => trim($rec['COMBINATIONS']),
                          'jackpot'  => trim($rec["JACKPOT"]),
                          'winners'   => trim($rec["WINNERS"]));
                      
            $status = db_query("INSERT INTO {lotto} (lottogame, drawdate, combination, jackpot, winners)
                                VALUES (:lottogame, :drawdate, :combination, :jackpot, :winners)",
                                array(':lottogame' => $data['lottogame'], 
                                      ':drawdate' => $data['drawdate'], 
                                      ':combination' => $data['combination'], 
                                      ':jackpot' => $data['jackpot'], 
                                      ':winners' => $data['winners']));
            
            if (false == $status) {
              drupal_set_message("failed to write " . trim($rec["Lotto Game"]));
            }
          }
          
          variable_set('lotto_checked', time());
          watchdog('lotto', t('There is new content from %site.', array('%site' => $feed['url'])));
          drupal_set_message(t('There is new content from %site.', array('%site' => $feed['url'])));
        }
        else {
          drupal_set_message(t('Failed to parse content from %site.', array('%site' => $feed['url'])));
          watchdog('lotto', t('Failed to parse content from %site.', array('%site' => $feed['url'])));
        }

      }
      break;
    default:
      watchdog('lotto', t('The feed from %site seems to be broken, due to "%error".', array('%site' => $feed['url'], '%error' => $result->code .' '. $result->error)), WATCHDOG_WARNING);
   }
}

/**
 *
 */
function lotto_admin_settings() {

  $period = drupal_map_assoc(array(3600, 7200, 14400, 21600, 43200), 'format_interval');

  $form['lotto_source_url'] = array(
    '#type' => 'textfield',
    '#title' => t('Source URL'),
    '#size' => 80,
    '#maxlength' => 255,
    '#default_value' => variable_get('lotto_source_url', 'http://www.pcso.gov.ph/index.php/games/search-lotto-results/'), 
    '#description' => t('HTML Table source URL; Oldsite: http://oldweb.pcso.gov.ph/lotto-search.aspx; 
																								new: http://www.pcso.gov.ph/lotto-search/')
  );

  $form['lotto_refresh'] = array('#type' => 'select',
    '#title' => t('Update interval'),
    '#default_value' => variable_get('lotto_refresh', 7200),
    '#options' => $period,
    '#description' => t('The refresh interval indicating how often you want to update this feed. Requires crontab.'),
  );

  $form['lotto_update'] = array('#type' => 'button', '#value' => t('Update'));

//  if (isset($_POST['op']) && $_POST['op'] == 'Save configuration') {
//    var_dump($_POST);
//  }

  if (isset($_POST['op']) && $_POST['op'] == 'Update') {
    lotto_refresh();
    drupal_set_message(t('PCSO Lotto results updated.'), 'status');
    drupal_goto('lotto/latest');
  }

  return system_settings_form($form);
}

/**
 * Implementation of hook_menu().
 */
function lotto_menu() {
  $items = array();

  $items['admin/config/services/lotto'] = array(
    'title' => t('PCSO Lotto  Settings'),
    'description' => t('PCSO Lotto module settings'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('lotto_admin_settings'),
    'access arguments' => array('administer lotto')
  );

  $items['lotto/latest'] = array(
    'title' => 'PCSO Lotto Results',
    'page callback' => 'lotto_latest_results',
    'access arguments' => array('access lotto'),
    'type' => MENU_CALLBACK,
    'file' => 'lotto.pages.inc',
  );
  
  return $items;

}

/**
 * Implementation of hook_permission().
 */
function lotto_permission() {
  return array(
      'administer lotto' => array(
        'title' => t('Administer Lotto'),
      ),
      'access lotto' => array(
        'title' => t('View Lotto'),
      ),
    );  
}

function lotto_is_valid_content(&$items) {
  if (!is_array($items)) {
    return FALSE;
  } 

  foreach ($items as $item) {
    if (!isset($item['DRAW DATE']) || 
        !isset($item["LOTTO GAME"]) || 
        !isset($item["COMBINATIONS"])) {
      return FALSE;
    }
  }

  return TRUE;
}

function lotto_theme() {
  return array(
    'lotto_block_featured_results' => array(
      'variables' => array('items' => NULL),
      'template' => 'lotto-block-featured-results',
    ),
    'lotto_page_latest_results' => array(
      'variables' => array('items' => NULL),
      'template' => 'lotto-page-latest-results',
    ),
  );
}

